{"version":3,"file":"statics/bundle.39.04be63d1b0972d2dd7c8.js","sources":["webpack:///./docs/API/createForm.md"],"sourcesContent":["\"use strict\";\n\nvar React = require('/Users/wangzhili/uform/node_modules/_react@16.8.6@react/index.js');\n\nvar ReactDOM = require('/Users/wangzhili/uform/node_modules/_react-dom@16.8.6@react-dom/index.js');\n\nvar ReactCodeSnippet = require('/Users/wangzhili/uform/node_modules/_react-code-snippet@0.6.12@react-code-snippet/lib/index.js');\n\nvar ReactPropsTable = require('/Users/wangzhili/uform/node_modules/_react-props-table@0.1.3@react-props-table/lib/index.js');\n\nvar __DEFINE__ = function __DEFINE__(fn) {\n  var module = {\n    exports: {}\n  };\n  fn(module, module.exports);\n  var component = module.exports.__esModule && module.exports['default'] || module.exports;\n  return typeof component === 'function' ? component : function () {\n    return React.createElement('div', {}, 'Code snippet should export a component!');\n  };\n};\n\nvar __MARKDOWN__ = function __MARKDOWN__() {\n  return React.createElement(React.Fragment, {}, React.createElement(\"h1\", {\n    id: \"createform\",\n    className: \"react-demo-h1\"\n  }, \"createForm\"), React.createElement(\"h2\", {\n    id: \"介绍\",\n    className: \"react-demo-h2\"\n  }, \"介绍\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"创建一个Form实例，它负责管理整个表单的数据状态与校验状态。\"), React.createElement(\"h2\", {\n    id: \"类型描述\",\n    className: \"react-demo-h2\"\n  }, \"类型描述\"), React.createElement(ReactCodeSnippet, {\n    code: \"type createForm({\\n  initialValues : Object,\\n  subscribes : Object,\\n  schema : Object,\\n  effects : Function,\\n  onSubmit : Function,\\n  onReset : Function,\\n  onFormChange : Function,\\n  onFieldChange : Function,\\n  onValidateFailed : Function\\n})\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"依赖\",\n    className: \"react-demo-h2\"\n  }, \"依赖\"), React.createElement(ReactCodeSnippet, {\n    code: \"import {createForm} from '@alife/uform'\\n\",\n    justCode: true,\n    lang: \"javascript\"\n  }), React.createElement(\"h2\", {\n    id: \"api\",\n    className: \"react-demo-h2\"\n  }, \"API\"), React.createElement(\"table\", {\n    className: \"react-demo-table\"\n  }, React.createElement(\"thead\", {\n    className: \"react-demo-thead\"\n  }, React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"th\", {\n    align: null,\n    className: \"react-demo-th\"\n  }, \"属性名称\"), React.createElement(\"th\", {\n    align: null,\n    className: \"react-demo-th\"\n  }, \"属性描述\"), React.createElement(\"th\", {\n    align: null,\n    className: \"react-demo-th\"\n  }, \"属性类型\"), React.createElement(\"th\", {\n    align: null,\n    className: \"react-demo-th\"\n  }, \"默认值\"))), React.createElement(\"tbody\", {\n    className: \"react-demo-tbody\"\n  }, React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"initialValues\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"初始值\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"Object\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"subscribes\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"观察者对象\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"{[eventName:String]:Observable}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"schema\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"json schema对象，用于搜索json schema中的default属性值，同时merge至initialValues中\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"Object\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"effects\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"副作用处理函数\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function( selector : Function ){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"onSubmit\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"Submit事件处理器\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function({formState : Object}){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"onReset\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"Reset事件处理器\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function({formState : Object}){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"onFormChange\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"FormChange事件处理器\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function({ formState : Object }){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"onFieldChange\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"FieldChange事件处理器\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function({ formState : Object, fieldState : Object }){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })), React.createElement(\"tr\", {\n    className: \"react-demo-tr\"\n  }, React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"onValidateFailed\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, \"Validate校验失败事件处理器\"), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  }, React.createElement(\"code\", {\n    className: \"react-demo-code\"\n  }, \"Function(errors : Array<String>){}\")), React.createElement(\"td\", {\n    align: null,\n    className: \"react-demo-td\"\n  })))), React.createElement(\"h2\", {\n    id: \"formstate\",\n    className: \"react-demo-h2\"\n  }, \"formState\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"用于描述整个表单状态的模型对象\"), React.createElement(ReactCodeSnippet, {\n    code: \"type formState {\\n    values            : Object, //表单数据\\n    valid             : Boolean, //是否合法\\n    invalid           : Boolean, //是否不合法\\n    errors            : Array<String>, //错误提示集合\\n    pristine          : Boolean, //是否是原始态\\n    dirty             : Boolean //是否存在变化\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"fieldstate\",\n    className: \"react-demo-h2\"\n  }, \"fieldState\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"用于描述表单字段状态的模型对象\"), React.createElement(ReactCodeSnippet, {\n    code: \"type fieldState {\\n    value            : Any,//字段值\\n    valid            : Boolean,//字段是否合法\\n    invalid          : Boolean,//字段是否非法\\n    visible          : Boolean,//字段显示状态\\n    editable         : Boolean,//字段是否可编辑\\n    loading          : Boolean,//字段加载状态\\n    errors           : Array<String>,//字段错误消息集合\\n    pristine         : Boolean,//字段是否处于原始态\\n    initialValue     : Any,//字段初始值\\n    name             : String,//字段路径\\n    path,            : Array<String>//字段路径，数组形式\\n    props            : Object,//字段schema对象\\n    rules            : Array<Object | Function | String>//字段校验规则\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"用例\",\n    className: \"react-demo-h2\"\n  }, \"用例\"), React.createElement(ReactCodeSnippet, {\n    code: \"const form = createForm({\\n  initialValues: {\\n    aa: 123,\\n    bb: 222\\n  },\\n  onSubmit: ({formState}) => {\\n    console.log(formState)\\n  },\\n  onFieldChange:({formState})=>{\\n    console.log(formState)\\n  }\\n})\\n\\nconst aa = form.registerField('aa', {\\n  onChange(fieldState) {\\n    console.log(fieldState)\\n  }\\n})\\n\\nsetTimeout(() => {\\n  aa.changeValue(456)\\n  setTimeout(() => {\\n    form.submit()\\n  }, 1000)\\n}, 500)\\n\",\n    justCode: true,\n    lang: \"javascript\"\n  }));\n};\n\n__MARKDOWN__.meta = {\n  \"username\": \"zhili.wzl\",\n  \"email\": \"wangzhili56@126.com\"\n};\nmodule.exports = __MARKDOWN__;"],"mappings":"AAEA","sourceRoot":""}