{"version":3,"file":"statics/bundle.5.cbf9fa3347455353f60f.js","sources":["webpack:///./node_modules/_moment@2.24.0@moment/locale sync ^\\.\\/.*$","webpack:///./packages/next/src/utils.js","webpack:///./packages/next/src/form.js","webpack:///./packages/next/src/fields/array.js","webpack:///./packages/next/src/fields/table.js","webpack:///./packages/next/src/fields/password.js","webpack:///./packages/next/src/components/formButtonGroup.js","webpack:///./packages/next/src/components/button.js","webpack:///./packages/next/src/components/layout.js","webpack:///./packages/next/src/index.js"],"sourcesContent":["var map = {\n\t\"./af\": 292,\n\t\"./af.js\": 292,\n\t\"./ar\": 293,\n\t\"./ar-dz\": 294,\n\t\"./ar-dz.js\": 294,\n\t\"./ar-kw\": 295,\n\t\"./ar-kw.js\": 295,\n\t\"./ar-ly\": 296,\n\t\"./ar-ly.js\": 296,\n\t\"./ar-ma\": 297,\n\t\"./ar-ma.js\": 297,\n\t\"./ar-sa\": 298,\n\t\"./ar-sa.js\": 298,\n\t\"./ar-tn\": 299,\n\t\"./ar-tn.js\": 299,\n\t\"./ar.js\": 293,\n\t\"./az\": 300,\n\t\"./az.js\": 300,\n\t\"./be\": 301,\n\t\"./be.js\": 301,\n\t\"./bg\": 302,\n\t\"./bg.js\": 302,\n\t\"./bm\": 303,\n\t\"./bm.js\": 303,\n\t\"./bn\": 304,\n\t\"./bn.js\": 304,\n\t\"./bo\": 305,\n\t\"./bo.js\": 305,\n\t\"./br\": 306,\n\t\"./br.js\": 306,\n\t\"./bs\": 307,\n\t\"./bs.js\": 307,\n\t\"./ca\": 308,\n\t\"./ca.js\": 308,\n\t\"./cs\": 309,\n\t\"./cs.js\": 309,\n\t\"./cv\": 310,\n\t\"./cv.js\": 310,\n\t\"./cy\": 311,\n\t\"./cy.js\": 311,\n\t\"./da\": 312,\n\t\"./da.js\": 312,\n\t\"./de\": 313,\n\t\"./de-at\": 314,\n\t\"./de-at.js\": 314,\n\t\"./de-ch\": 315,\n\t\"./de-ch.js\": 315,\n\t\"./de.js\": 313,\n\t\"./dv\": 316,\n\t\"./dv.js\": 316,\n\t\"./el\": 317,\n\t\"./el.js\": 317,\n\t\"./en-SG\": 318,\n\t\"./en-SG.js\": 318,\n\t\"./en-au\": 319,\n\t\"./en-au.js\": 319,\n\t\"./en-ca\": 320,\n\t\"./en-ca.js\": 320,\n\t\"./en-gb\": 321,\n\t\"./en-gb.js\": 321,\n\t\"./en-ie\": 322,\n\t\"./en-ie.js\": 322,\n\t\"./en-il\": 323,\n\t\"./en-il.js\": 323,\n\t\"./en-nz\": 324,\n\t\"./en-nz.js\": 324,\n\t\"./eo\": 325,\n\t\"./eo.js\": 325,\n\t\"./es\": 326,\n\t\"./es-do\": 327,\n\t\"./es-do.js\": 327,\n\t\"./es-us\": 328,\n\t\"./es-us.js\": 328,\n\t\"./es.js\": 326,\n\t\"./et\": 329,\n\t\"./et.js\": 329,\n\t\"./eu\": 330,\n\t\"./eu.js\": 330,\n\t\"./fa\": 331,\n\t\"./fa.js\": 331,\n\t\"./fi\": 332,\n\t\"./fi.js\": 332,\n\t\"./fo\": 333,\n\t\"./fo.js\": 333,\n\t\"./fr\": 334,\n\t\"./fr-ca\": 335,\n\t\"./fr-ca.js\": 335,\n\t\"./fr-ch\": 336,\n\t\"./fr-ch.js\": 336,\n\t\"./fr.js\": 334,\n\t\"./fy\": 337,\n\t\"./fy.js\": 337,\n\t\"./ga\": 338,\n\t\"./ga.js\": 338,\n\t\"./gd\": 339,\n\t\"./gd.js\": 339,\n\t\"./gl\": 340,\n\t\"./gl.js\": 340,\n\t\"./gom-latn\": 341,\n\t\"./gom-latn.js\": 341,\n\t\"./gu\": 342,\n\t\"./gu.js\": 342,\n\t\"./he\": 343,\n\t\"./he.js\": 343,\n\t\"./hi\": 344,\n\t\"./hi.js\": 344,\n\t\"./hr\": 345,\n\t\"./hr.js\": 345,\n\t\"./hu\": 346,\n\t\"./hu.js\": 346,\n\t\"./hy-am\": 347,\n\t\"./hy-am.js\": 347,\n\t\"./id\": 348,\n\t\"./id.js\": 348,\n\t\"./is\": 349,\n\t\"./is.js\": 349,\n\t\"./it\": 350,\n\t\"./it-ch\": 351,\n\t\"./it-ch.js\": 351,\n\t\"./it.js\": 350,\n\t\"./ja\": 352,\n\t\"./ja.js\": 352,\n\t\"./jv\": 353,\n\t\"./jv.js\": 353,\n\t\"./ka\": 354,\n\t\"./ka.js\": 354,\n\t\"./kk\": 355,\n\t\"./kk.js\": 355,\n\t\"./km\": 356,\n\t\"./km.js\": 356,\n\t\"./kn\": 357,\n\t\"./kn.js\": 357,\n\t\"./ko\": 358,\n\t\"./ko.js\": 358,\n\t\"./ku\": 359,\n\t\"./ku.js\": 359,\n\t\"./ky\": 360,\n\t\"./ky.js\": 360,\n\t\"./lb\": 361,\n\t\"./lb.js\": 361,\n\t\"./lo\": 362,\n\t\"./lo.js\": 362,\n\t\"./lt\": 363,\n\t\"./lt.js\": 363,\n\t\"./lv\": 364,\n\t\"./lv.js\": 364,\n\t\"./me\": 365,\n\t\"./me.js\": 365,\n\t\"./mi\": 366,\n\t\"./mi.js\": 366,\n\t\"./mk\": 367,\n\t\"./mk.js\": 367,\n\t\"./ml\": 368,\n\t\"./ml.js\": 368,\n\t\"./mn\": 369,\n\t\"./mn.js\": 369,\n\t\"./mr\": 370,\n\t\"./mr.js\": 370,\n\t\"./ms\": 371,\n\t\"./ms-my\": 372,\n\t\"./ms-my.js\": 372,\n\t\"./ms.js\": 371,\n\t\"./mt\": 373,\n\t\"./mt.js\": 373,\n\t\"./my\": 374,\n\t\"./my.js\": 374,\n\t\"./nb\": 375,\n\t\"./nb.js\": 375,\n\t\"./ne\": 376,\n\t\"./ne.js\": 376,\n\t\"./nl\": 377,\n\t\"./nl-be\": 378,\n\t\"./nl-be.js\": 378,\n\t\"./nl.js\": 377,\n\t\"./nn\": 379,\n\t\"./nn.js\": 379,\n\t\"./pa-in\": 380,\n\t\"./pa-in.js\": 380,\n\t\"./pl\": 381,\n\t\"./pl.js\": 381,\n\t\"./pt\": 382,\n\t\"./pt-br\": 383,\n\t\"./pt-br.js\": 383,\n\t\"./pt.js\": 382,\n\t\"./ro\": 384,\n\t\"./ro.js\": 384,\n\t\"./ru\": 385,\n\t\"./ru.js\": 385,\n\t\"./sd\": 386,\n\t\"./sd.js\": 386,\n\t\"./se\": 387,\n\t\"./se.js\": 387,\n\t\"./si\": 388,\n\t\"./si.js\": 388,\n\t\"./sk\": 389,\n\t\"./sk.js\": 389,\n\t\"./sl\": 390,\n\t\"./sl.js\": 390,\n\t\"./sq\": 391,\n\t\"./sq.js\": 391,\n\t\"./sr\": 392,\n\t\"./sr-cyrl\": 393,\n\t\"./sr-cyrl.js\": 393,\n\t\"./sr.js\": 392,\n\t\"./ss\": 394,\n\t\"./ss.js\": 394,\n\t\"./sv\": 395,\n\t\"./sv.js\": 395,\n\t\"./sw\": 396,\n\t\"./sw.js\": 396,\n\t\"./ta\": 397,\n\t\"./ta.js\": 397,\n\t\"./te\": 398,\n\t\"./te.js\": 398,\n\t\"./tet\": 399,\n\t\"./tet.js\": 399,\n\t\"./tg\": 400,\n\t\"./tg.js\": 400,\n\t\"./th\": 401,\n\t\"./th.js\": 401,\n\t\"./tl-ph\": 402,\n\t\"./tl-ph.js\": 402,\n\t\"./tlh\": 403,\n\t\"./tlh.js\": 403,\n\t\"./tr\": 404,\n\t\"./tr.js\": 404,\n\t\"./tzl\": 405,\n\t\"./tzl.js\": 405,\n\t\"./tzm\": 406,\n\t\"./tzm-latn\": 407,\n\t\"./tzm-latn.js\": 407,\n\t\"./tzm.js\": 406,\n\t\"./ug-cn\": 408,\n\t\"./ug-cn.js\": 408,\n\t\"./uk\": 409,\n\t\"./uk.js\": 409,\n\t\"./ur\": 410,\n\t\"./ur.js\": 410,\n\t\"./uz\": 411,\n\t\"./uz-latn\": 412,\n\t\"./uz-latn.js\": 412,\n\t\"./uz.js\": 411,\n\t\"./vi\": 413,\n\t\"./vi.js\": 413,\n\t\"./x-pseudo\": 414,\n\t\"./x-pseudo.js\": 414,\n\t\"./yo\": 415,\n\t\"./yo.js\": 415,\n\t\"./zh-cn\": 416,\n\t\"./zh-cn.js\": 416,\n\t\"./zh-hk\": 417,\n\t\"./zh-hk.js\": 417,\n\t\"./zh-tw\": 418,\n\t\"./zh-tw.js\": 418\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 503;","import React from 'react'\nimport { Select } from '@alifd/next'\nimport styled from 'styled-components'\nimport { isFn } from '@uform/utils'\nimport MoveTo from 'moveto'\nexport * from '@uform/utils'\n\nconst Text = styled(props => {\n  let value\n  if (props.dataSource && props.dataSource.length) {\n    let find = props.dataSource.filter(({ value }) =>\n      Array.isArray(props.value)\n        ? props.value.indexOf(value) > -1\n        : props.value === value\n    )\n    value = find.map(item => item.label).join(' , ')\n  } else {\n    value = Array.isArray(props.value)\n      ? props.value.join(' ~ ')\n      : String(props.value || '')\n  }\n  return (\n    <div className={`${props.className} ${props.size || ''} text-field`}>\n      {value || 'N/A'}\n    </div>\n  )\n})`\n  height: 28px;\n  line-height: 28px;\n  vertical-align: middle;\n  font-size: 13px;\n  color: #333;\n  &.small {\n    height: 20px;\n    line-height: 20px;\n  }\n  &.large {\n    height: 40px;\n    line-height: 40px;\n  }\n`\n\nexport const acceptEnum = component => {\n  return ({ dataSource, ...others }) => {\n    if (dataSource) {\n      return React.createElement(Select, { dataSource, ...others })\n    } else {\n      return React.createElement(component, others)\n    }\n  }\n}\n\nexport const mapStyledProps = (props, { loading, size }) => {\n  if (loading) {\n    props.state = props.state || 'loading'\n  }\n  if (size) {\n    props.size = size\n  }\n}\n\nexport const mapTextComponent = (Target, props, { editable, name }) => {\n  if (editable !== undefined) {\n    if (isFn(editable)) {\n      if (!editable(name)) {\n        return Text\n      }\n    } else if (editable === false) {\n      return Text\n    }\n  }\n  return Target\n}\n\nexport const compose = (...args) => {\n  return (payload, ...extra) => {\n    return args.reduce((buf, fn) => {\n      return buf !== undefined ? fn(buf, ...extra) : fn(payload, ...extra)\n    }, payload)\n  }\n}\n\nexport const moveTo = element => {\n  if (!element) return\n  if (element.scrollIntoView) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      inline: 'start',\n      block: 'start'\n    })\n  } else {\n    new MoveTo().move(element.getBoundingClientRect().top)\n  }\n}\n","import React from 'react'\nimport { registerFormWrapper, registerFieldMiddleware } from '@uform/react'\nimport classNames from 'classnames'\nimport { ConfigProvider, Balloon, Icon } from '@alifd/next'\nimport { Row, Col } from '@alifd/next/lib/grid'\nimport LOCALE from './locale'\nimport styled from 'styled-components'\nimport { isFn, moveTo } from './utils'\n/**\n * 轻量级Next Form，不包含任何数据管理能力\n *\n */\n\nexport const {\n  Provider: FormProvider,\n  Consumer: FormConsumer\n} = React.createContext()\n\nconst normalizeCol = col => {\n  return typeof col === 'object' ? col : { span: col }\n}\n\nconst getParentNode = (node, selector) => {\n  if (!node || (node && !node.matches)) return\n  if (node.matches(selector)) return node\n  else {\n    return getParentNode(node.parentNode || node.parentElement, selector)\n  }\n}\n\nexport const FormItem = styled(\n  class FormItem extends React.Component {\n    static defaultProps = {\n      prefix: 'next-'\n    }\n\n    getItemLabel() {\n      const {\n        id,\n        required,\n        label,\n        labelCol,\n        wrapperCol,\n        prefix,\n        extra,\n        labelAlign,\n        labelTextAlign,\n        autoAddColon,\n        isTableColItem\n      } = this.props\n\n      if (!label || isTableColItem) {\n        return null\n      }\n\n      const ele = (\n        <label htmlFor={id} required={required} key='label'>\n          {label}\n          {label === ' ' ? '' : autoAddColon ? '：' : ''}\n        </label>\n      )\n\n      const cls = classNames({\n        [`${prefix}form-item-label`]: true,\n        [`${prefix}left`]: labelTextAlign === 'left'\n      })\n\n      if ((wrapperCol || labelCol) && labelAlign !== 'top') {\n        return (\n          <Col {...normalizeCol(labelCol)} className={cls}>\n            {ele}\n            {((extra && extra.length > 20) || React.isValidElement(extra)) &&\n              this.renderHelper()}\n          </Col>\n        )\n      }\n\n      return <div className={cls}>{ele}</div>\n    }\n\n    getItemWrapper() {\n      const {\n        labelCol,\n        wrapperCol,\n        children,\n        extra,\n        label,\n        labelAlign,\n        help,\n        size,\n        prefix,\n        noMinHeight,\n        isTableColItem\n      } = this.props\n\n      const message = (\n        <div\n          className={`${prefix}form-item-msg ${\n            !noMinHeight ? `${prefix}form-item-space` : ''\n          }`}\n        >\n          {help && <div className={`${prefix}form-item-help`}>{help}</div>}\n          {!help && extra && extra.length <= 20 && (\n            <div className={`${prefix}form-item-extra`}>{extra}</div>\n          )}\n        </div>\n      )\n      if (\n        (wrapperCol || labelCol) &&\n        labelAlign !== 'top' &&\n        !isTableColItem &&\n        label\n      ) {\n        return (\n          <Col\n            {...normalizeCol(wrapperCol)}\n            className={`${prefix}form-item-control`}\n            key='item'\n          >\n            {React.cloneElement(children, { size })}\n            {message}\n          </Col>\n        )\n      }\n\n      return (\n        <div className={`${prefix}form-item-control`}>\n          {React.cloneElement(children, { size })}\n          {message}\n        </div>\n      )\n    }\n\n    renderHelper() {\n      return (\n        <Balloon\n          closable={false}\n          align='t'\n          trigger={<Icon type='help' size='small' />}\n        >\n          {this.props.extra}\n        </Balloon>\n      )\n    }\n\n    render() {\n      const {\n        className,\n        labelAlign,\n        labelTextAlign,\n        style,\n        prefix,\n        wrapperCol,\n        labelCol,\n        size,\n        help,\n        extra,\n        noMinHeight,\n        isTableColItem,\n        validateState,\n        autoAddColon,\n        required,\n        type,\n        schema,\n        ...others\n      } = this.props\n\n      const itemClassName = classNames({\n        [`${prefix}form-item`]: true,\n        [`${prefix}${labelAlign}`]: labelAlign,\n        [`has-${validateState}`]: !!validateState,\n        [`${prefix}${size}`]: !!size,\n        [`${className}`]: !!className,\n        [`field-${type}`]: !!type\n      })\n\n      // 垂直模式并且左对齐才用到\n      const Tag = (wrapperCol || labelCol) && labelAlign !== 'top' ? Row : 'div'\n      const label = labelAlign === 'inset' ? null : this.getItemLabel()\n\n      return (\n        <Tag {...others} gutter={0} className={itemClassName} style={style}>\n          {label}\n          {this.getItemWrapper()}\n        </Tag>\n      )\n    }\n  }\n)`\n  margin-bottom: 6px;\n  &.field-table {\n    .next-form-item-control {\n      overflow: auto;\n    }\n  }\n  .next-form-item-msg {\n    &.next-form-item-space {\n      min-height: 20px;\n      .next-form-item-help,\n      .next-form-item-extra {\n        margin-top: 0;\n      }\n    }\n  }\n  .next-form-item-extra {\n    color: #888;\n    font-size: 12px;\n    line-height: 1.7;\n  }\n`\n\nconst toArr = val => (Array.isArray(val) ? val : val ? [val] : [])\n\nconst hasRequired = schema => {\n  if (schema.required) return true\n  if (schema['x-rules'] && schema['x-rules'].required) return true\n  return toArr(schema['x-rules']).some(v => v && v.required)\n}\n\nregisterFormWrapper(OriginForm => {\n  OriginForm = styled(OriginForm)`\n    &.next-inline {\n      display: flex;\n      .rs-uform-content {\n        margin-right: 15px;\n      }\n    }\n    .next-radio-group,\n    .next-checkbox-group {\n      line-height: 28px;\n      & > label {\n        margin-right: 8px;\n      }\n    }\n    .next-small {\n      .next-radio-group,\n      .next-checkbox-group {\n        line-height: 20px;\n      }\n    }\n    .next-small {\n      .next-radio-group,\n      .next-checkbox-group {\n        line-height: 40px;\n      }\n    }\n    .next-card-head {\n      background: none;\n    }\n    .next-rating-medium {\n      min-height: 28px;\n      line-height: 28px;\n    }\n    .next-rating-small {\n      min-height: 20px;\n      line-height: 20px;\n    }\n    .next-rating-large {\n      min-height: 40px;\n      line-height: 40px;\n    }\n  `\n\n  return ConfigProvider.config(\n    class Form extends React.Component {\n      static defaultProps = {\n        component: 'form',\n        prefix: 'next-',\n        size: 'medium',\n        labelAlign: 'left',\n        locale: LOCALE,\n        autoAddColon: true\n      }\n\n      static displayName = 'SchemaForm'\n\n      FormRef = React.createRef()\n\n      validateFailedHandler(onValidateFailed) {\n        return (...args) => {\n          if (isFn(onValidateFailed)) {\n            onValidateFailed(...args)\n          }\n          const container = this.FormRef.current\n          if (container) {\n            const errors = container.querySelectorAll('.next-form-item-help')\n            if (errors && errors.length) {\n              const node = getParentNode(errors[0], '.next-form-item')\n              if (node) {\n                moveTo(node)\n              }\n            }\n          }\n        }\n      }\n\n      render() {\n        const {\n          className,\n          inline,\n          size,\n          labelAlign,\n          labelTextAlign,\n          autoAddColon,\n          children,\n          component,\n          labelCol,\n          wrapperCol,\n          style,\n          prefix,\n          ...others\n        } = this.props\n        const formClassName = classNames({\n          [`${prefix}form`]: true,\n          [`${prefix}inline`]: inline, // 内联\n          [`${prefix}${size}`]: size,\n          [className]: !!className\n        })\n        return (\n          <FormProvider\n            value={{\n              labelAlign,\n              labelTextAlign,\n              labelCol,\n              wrapperCol,\n              inline,\n              size,\n              autoAddColon,\n              FormRef: this.FormRef\n            }}\n          >\n            <OriginForm\n              {...others}\n              formRef={this.FormRef}\n              onValidateFailed={this.validateFailedHandler(\n                others.onValidateFailed\n              )}\n              className={formClassName}\n              style={style}\n            >\n              {children}\n            </OriginForm>\n          </FormProvider>\n        )\n      }\n    }\n  )\n})\n\nconst isTableColItem = (path, getSchema) => {\n  const schema = getSchema(path)\n  return schema && schema.type === 'array' && schema['x-component'] === 'table'\n}\n\nregisterFieldMiddleware(Field => {\n  return props => {\n    const { name, editable, errors, path, schema, getSchema } = props\n    if (path.length === 0) return React.createElement(Field, props) // 根节点是不需要包FormItem的\n    return React.createElement(\n      FormConsumer,\n      {},\n      ({\n        labelAlign,\n        labelTextAlign,\n        labelCol,\n        wrapperCol,\n        size,\n        autoAddColon\n      }) => {\n        return React.createElement(\n          FormItem,\n          {\n            labelAlign,\n            labelTextAlign,\n            labelCol,\n            wrapperCol,\n            autoAddColon,\n            size,\n            ...schema['x-item-props'],\n            label:\n              schema.title || (schema['x-props'] && schema['x-props'].title),\n            noMinHeight: schema.type === 'object',\n            isTableColItem: isTableColItem(\n              path.slice(0, path.length - 2),\n              getSchema\n            ),\n            type: schema['x-component'] || schema['type'],\n            id: name,\n            validateState: toArr(errors).length ? 'error' : undefined,\n            required: editable === false ? false : hasRequired(schema),\n            extra: schema.description,\n            help:\n              toArr(errors).join(' , ') ||\n              (schema['x-item-props'] && schema['x-item-props'].help)\n          },\n          React.createElement(Field, props)\n        )\n      }\n    )\n  }\n})\n","import React from 'react'\nimport { registerFormField, createArrayField } from '@uform/react'\nimport { Button, Icon } from '@alifd/next'\nimport styled from 'styled-components'\n\nexport const CircleButton = styled.div.attrs({ className: 'cricle-btn' })`\n  width:30px;\n  height:30px;\n  margin-right:10px;\n  border-radius: 100px;\n  border: 1px solid #eee;\n  margin-bottom:20px;\n  cursor:pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  &:hover{\n    background:#f7f4f4;\n  }\n}\n`\nexport const ArrayField = createArrayField({\n  CircleButton,\n  TextButton: props => (\n    <Button text size='large'>\n      {props.children}\n    </Button>\n  ),\n  AddIcon: () => <Icon type='add' className='next-icon-first' />,\n  RemoveIcon: () => (\n    <Icon size='xs' type='ashbin' className='next-icon-first' />\n  ),\n  MoveDownIcon: () => (\n    <Icon size='xs' type='arrow-down' className='next-icon-first' />\n  ),\n  MoveUpIcon: () => (\n    <Icon size='xs' type='arrow-up' className='next-icon-first' />\n  )\n})\n\nregisterFormField(\n  'array',\n  styled(\n    class extends ArrayField {\n      render() {\n        const { className, name, schema, value, renderField } = this.props\n        const style = (schema['x-props'] && schema['x-props'].style) || {}\n        return (\n          <div\n            className={className}\n            style={style}\n            onClick={this.onClearErrorHandler()}\n          >\n            {value.map((item, index) => {\n              return (\n                <div className='array-item' key={`${name}.${index}`}>\n                  <div className='array-index'>\n                    <span>{index + 1}</span>\n                  </div>\n                  <div className='array-item-wrapper'>{renderField(index)}</div>\n                  <div className='array-item-operator'>\n                    {this.renderRemove(index, item)}\n                    {this.renderMoveDown(index, item)}\n                    {this.renderMoveUp(index, item)}\n                  </div>\n                </div>\n              )\n            })}\n            {this.renderEmpty()}\n            {value.length > 0 && this.renderAddition()}\n          </div>\n        )\n      }\n    }\n  )`\n    border: 1px solid #eee;\n    min-width: 400px;\n    .array-item {\n      padding: 20px;\n      padding-bottom: 0;\n      padding-top: 30px;\n      border-bottom: 1px solid #eee;\n      position: relative;\n      &:nth-child(even) {\n        background: #fafafa;\n      }\n      .array-index {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: block;\n        span {\n          position: absolute;\n          color: #fff;\n          z-index: 1;\n          font-size: 12px;\n          top: 3px;\n          left: 3px;\n        }\n        &::after {\n          content: '';\n          display: block;\n          border-top: 20px solid transparent;\n          border-left: 20px solid transparent;\n          border-bottom: 20px solid transparent;\n          border-right: 20px solid #888;\n          transform: rotate(45deg);\n          position: absolute;\n          z-index: 0;\n          top: -20px;\n          left: -20px;\n        }\n      }\n      .array-item-operator {\n        display: flex;\n        border-top: 1px solid #eee;\n        padding-top: 20px;\n      }\n    }\n    .array-empty-wrapper {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      &.disabled {\n        cursor: default;\n      }\n      .array-empty {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        margin: 20px;\n        img {\n          display: block;\n          height: 80px;\n        }\n        .next-btn-text {\n          color: #999;\n        }\n      }\n    }\n    .array-item-wrapper {\n      margin: 0 -20px;\n    }\n    .array-item-addition {\n      padding: 10px 20px;\n      background: #fbfbfb;\n      .next-btn-text {\n        color: #888;\n      }\n    }\n  `\n)\n","import React, { Component } from 'react'\nimport { registerFormField } from '@uform/react'\nimport { isFn, toArr } from '@uform/utils'\nimport { ArrayField } from './array'\nimport styled from 'styled-components'\n\n/**\n * 轻量级Table，用next table实在太重了\n **/\nconst Table = styled(\n  class Table extends Component {\n    renderCell({ record, col, rowIndex, colIndex }) {\n      return (\n        <div className='next-table-cell-wrapper'>\n          {isFn(col.cell)\n            ? col.cell(\n              record ? record[col.dataIndex] : undefined,\n              rowIndex,\n              record\n            )\n            : record\n              ? record[col.dataIndex]\n              : undefined}\n        </div>\n      )\n    }\n\n    renderTable(columns, dataSource) {\n      return (\n        <div className='next-table-body'>\n          <table>\n            <colgroup>\n              {columns.map((col, index) => {\n                return <col key={index} style={{ width: col.width }} />\n              })}\n            </colgroup>\n            <thead>\n              <tr>\n                {columns.map((col, index) => {\n                  return (\n                    <th key={index} className='next-table-header-node'>\n                      <div className='next-table-cell-wrapper'>{col.title}</div>\n                    </th>\n                  )\n                })}\n              </tr>\n            </thead>\n            <tbody>\n              {dataSource.map((record, rowIndex) => {\n                return (\n                  <tr key={rowIndex} className='next-table-row'>\n                    {columns.map((col, colIndex) => {\n                      return (\n                        <td key={colIndex} className='next-table-cell'>\n                          {this.renderCell({\n                            record,\n                            col,\n                            rowIndex,\n                            colIndex\n                          })}\n                        </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })}\n              {this.renderPlacehodler(dataSource, columns)}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n\n    renderPlacehodler(dataSource, columns) {\n      if (dataSource.length === 0) {\n        return (\n          <tr className='next-table-row'>\n            <td className='next-table-cell' colSpan={columns.length}>\n              <div className='next-table-empty' style={{ padding: 10 }}>\n                <img\n                  src='//img.alicdn.com/tfs/TB1cVncKAzoK1RjSZFlXXai4VXa-184-152.svg'\n                  style={{ height: 60 }}\n                />\n              </div>\n            </td>\n          </tr>\n        )\n      }\n    }\n\n    getColumns(children) {\n      const columns = []\n      React.Children.forEach(children, child => {\n        if (React.isValidElement(child)) {\n          if (\n            child.type === Column ||\n            child.type.displayName === '@schema-table-column'\n          ) {\n            columns.push(child.props)\n          }\n        }\n      })\n\n      return columns\n    }\n\n    render() {\n      const columns = this.getColumns(this.props.children)\n      const dataSource = toArr(this.props.dataSource)\n      return (\n        <div className={this.props.className}>\n          <div className='next-table zebra'>\n            <div className='next-table-inner'>\n              {this.renderTable(columns, dataSource)}\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n)`\n  .next-table {\n    position: relative;\n  }\n\n  .next-table,\n  .next-table *,\n  .next-table :after,\n  .next-table :before {\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  .next-table table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    width: 100%;\n    background: #fff;\n    display: table !important;\n    margin: 0 !important;\n  }\n\n  .next-table table tr:first-child td {\n    border-top-width: 0;\n  }\n\n  .next-table th {\n    padding: 0;\n    background: #ebecf0;\n    color: #333;\n    text-align: left;\n    font-weight: 400;\n    min-width: 200px;\n    border: 1px solid #dcdee3;\n  }\n\n  .next-table th .next-table-cell-wrapper {\n    padding: 12px 16px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-all;\n  }\n\n  .next-table td {\n    padding: 0;\n    border: 1px solid #dcdee3;\n  }\n\n  .next-table td .next-table-cell-wrapper {\n    padding: 12px 16px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    word-break: break-all;\n    display: flex;\n  }\n\n  .next-table.zebra tr:nth-child(odd) td {\n    background: #fff;\n  }\n\n  .next-table.zebra tr:nth-child(2n) td {\n    background: #f7f8fa;\n  }\n\n  .next-table-empty {\n    color: #a0a2ad;\n    padding: 32px 0;\n    text-align: center;\n  }\n\n  .next-table-row {\n    -webkit-transition: all 0.3s ease;\n    transition: all 0.3s ease;\n    background: #fff;\n    color: #333;\n    border: none !important;\n  }\n\n  .next-table-row.hidden {\n    display: none;\n  }\n\n  .next-table-row.hovered,\n  .next-table-row.selected {\n    background: #f2f3f7;\n    color: #333;\n  }\n\n  .next-table-body,\n  .next-table-header {\n    overflow: auto;\n    font-size: 12px;\n  }\n\n  .next-table-body {\n    font-size: 12px;\n  }\n`\n\nclass Column extends Component {\n  static displayName = '@schema-table-column'\n  render() {\n    return this.props.children\n  }\n}\n\nregisterFormField(\n  'table',\n  styled(\n    class extends ArrayField {\n      createFilter(key, payload) {\n        const { schema } = this.props\n        const columnFilter = schema['x-props'] && schema['x-props'].columnFilter\n        return (render, otherwise) => {\n          if (isFn(columnFilter)) {\n            return columnFilter(key, payload)\n              ? isFn(render)\n                ? render()\n                : render\n              : isFn(otherwise)\n                ? otherwise()\n                : otherwise\n          } else {\n            return render()\n          }\n        }\n      }\n\n      render() {\n        const { value, schema, locale, className, renderField } = this.props\n        const style = schema['x-props'] && schema['x-props'].style\n        const additionFilter = this.createFilter('addition', schema)\n        return (\n          <div\n            className={className}\n            style={style}\n            onClick={this.onClearErrorHandler()}\n          >\n            <div>\n              <Table dataSource={value}>\n                {Object.keys(\n                  (schema.items && schema.items.properties) || {}\n                ).reduce((buf, key) => {\n                  const itemSchema = schema.items.properties[key]\n                  const filter = this.createFilter(key, itemSchema)\n                  const res = filter(\n                    () => {\n                      return buf.concat(\n                        <Column\n                          {...itemSchema}\n                          key={key}\n                          title={itemSchema.title}\n                          dataIndex={key}\n                          cell={(record, index) => {\n                            return renderField([index, key])\n                          }}\n                        />\n                      )\n                    },\n                    () => {\n                      return buf\n                    }\n                  )\n                  return res\n                }, [])}\n                {additionFilter(() => {\n                  return (\n                    <Column\n                      key='operations'\n                      title={locale.operations}\n                      dataIndex='operations'\n                      width={180}\n                      cell={(item, index) => {\n                        return (\n                          <div className='array-item-operator'>\n                            {this.renderRemove(index, item)}\n                            {this.renderMoveDown(index, item)}\n                            {this.renderMoveUp(index, item)}\n                          </div>\n                        )\n                      }}\n                    />\n                  )\n                })}\n              </Table>\n              {this.renderAddition()}\n            </div>\n          </div>\n        )\n      }\n    }\n  )`\n    display: inline-block;\n    .array-item-addition {\n      padding: 10px 20px;\n      background: #fbfbfb;\n      border-left: 1px solid #dcdee3;\n      border-right: 1px solid #dcdee3;\n      border-bottom: 1px solid #dcdee3;\n      .next-btn-text {\n        color: #888;\n      }\n    }\n    .array-item-operator {\n      display: flex;\n    }\n  `\n)\n","import React from 'react'\nimport { connect, registerFormField } from '@uform/react'\nimport { Input } from '@alifd/next'\nimport styled from 'styled-components'\n\nvar isNum = function(c) {\n  return c >= 48 && c <= 57\n}\nvar isLower = function(c) {\n  return c >= 97 && c <= 122\n}\nvar isUpper = function(c) {\n  return c >= 65 && c <= 90\n}\nvar isSymbol = function(c) {\n  return !(isLower(c) || isUpper(c) || isNum(c))\n}\nvar isLetter = function(c) {\n  return isLower(c) || isUpper(c)\n}\n\nconst getStrength = val => {\n  if (!val) return 0\n  let num = 0\n  let lower = 0\n  let upper = 0\n  let symbol = 0\n  let MNS = 0\n  let rep = 0\n  let repC = 0\n  let consecutive = 0\n  let sequential = 0\n  const len = () => num + lower + upper + symbol\n  const callme = () => {\n    var re = num > 0 ? 1 : 0\n    re += lower > 0 ? 1 : 0\n    re += upper > 0 ? 1 : 0\n    re += symbol > 0 ? 1 : 0\n    if (re > 2 && len() >= 8) {\n      return re + 1\n    } else {\n      return 0\n    }\n  }\n  for (var i = 0; i < val.length; i++) {\n    var c = val.charCodeAt(i)\n    if (isNum(c)) {\n      num++\n      if (i !== 0 && i !== val.length - 1) {\n        MNS++\n      }\n      if (i > 0 && isNum(val.charCodeAt(i - 1))) {\n        consecutive++\n      }\n    } else if (isLower(c)) {\n      lower++\n      if (i > 0 && isLower(val.charCodeAt(i - 1))) {\n        consecutive++\n      }\n    } else if (isUpper(c)) {\n      upper++\n      if (i > 0 && isUpper(val.charCodeAt(i - 1))) {\n        consecutive++\n      }\n    } else {\n      symbol++\n      if (i !== 0 && i !== val.length - 1) {\n        MNS++\n      }\n    }\n    var exists = false\n    for (var j = 0; j < val.length; j++) {\n      if (val[i] === val[j] && i !== j) {\n        exists = true\n        repC += Math.abs(val.length / (j - i))\n      }\n    }\n    if (exists) {\n      rep++\n      var unique = val.length - rep\n      repC = unique ? Math.ceil(repC / unique) : Math.ceil(repC)\n    }\n    if (i > 1) {\n      var last1 = val.charCodeAt(i - 1)\n      var last2 = val.charCodeAt(i - 2)\n      if (isLetter(c)) {\n        if (isLetter(last1) && isLetter(last2)) {\n          var v = val.toLowerCase()\n          var vi = v.charCodeAt(i)\n          var vi1 = v.charCodeAt(i - 1)\n          var vi2 = v.charCodeAt(i - 2)\n          if (vi - vi1 === vi1 - vi2 && Math.abs(vi - vi1) === 1) {\n            sequential++\n          }\n        }\n      } else if (isNum(c)) {\n        if (isNum(last1) && isNum(last2)) {\n          if (c - last1 === last1 - last2 && Math.abs(c - last1) === 1) {\n            sequential++\n          }\n        }\n      } else {\n        if (isSymbol(last1) && isSymbol(last2)) {\n          if (c - last1 === last1 - last2 && Math.abs(c - last1) === 1) {\n            sequential++\n          }\n        }\n      }\n    }\n  }\n  let sum = 0\n  let length = len()\n  sum += 4 * length\n  if (lower > 0) {\n    sum += 2 * (length - lower)\n  }\n  if (upper > 0) {\n    sum += 2 * (length - upper)\n  }\n  if (num !== length) {\n    sum += 4 * num\n  }\n  sum += 6 * symbol\n  sum += 2 * MNS\n  sum += 2 * callme()\n  if (length === lower + upper) {\n    sum -= length\n  }\n  if (length === num) {\n    sum -= num\n  }\n  sum -= repC\n  sum -= 2 * consecutive\n  sum -= 3 * sequential\n  sum = sum < 0 ? 0 : sum\n  sum = sum > 100 ? 100 : sum\n\n  if (sum >= 80) {\n    return 100\n  } else if (sum >= 60) {\n    return 80\n  } else if (sum >= 40) {\n    return 60\n  } else if (sum >= 20) {\n    return 40\n  } else {\n    return 20\n  }\n}\n\nconst Password = styled(\n  class Password extends React.Component {\n    state = {\n      value: this.props.value || this.props.defaultValue,\n      strength: 0,\n      eye: false\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n      if (\n        prevProps.value !== this.props.value &&\n        this.props.value !== this.state.value\n      ) {\n        this.setState({\n          value: this.props.value,\n          strength: getStrength(this.props.value)\n        })\n      }\n    }\n\n    onChangeHandler = value => {\n      this.setState(\n        {\n          value,\n          strength: getStrength(value)\n        },\n        () => {\n          if (this.props.onChange) {\n            this.props.onChange(value)\n          }\n        }\n      )\n    }\n\n    renderStrength() {\n      const { strength } = this.state\n      return (\n        <div className='password-strength-wrapper'>\n          <div className='div-1 div' />\n          <div className='div-2 div' />\n          <div className='div-3 div' />\n          <div className='div-4 div' />\n          <div\n            className='password-strength-bar'\n            style={{\n              clipPath: `polygon(0 0,${strength}% 0,${strength}% 100%,0 100%)`\n            }}\n          />\n        </div>\n      )\n    }\n\n    switchEye() {\n      return () => {\n        this.setState({\n          eye: !this.state.eye\n        })\n      }\n    }\n\n    renderEye() {\n      if (!this.state.eye) {\n        return (\n          <img\n            className='eye'\n            onClick={this.switchEye()}\n            src='//img.alicdn.com/tfs/TB1wyXlsVzqK1RjSZFvXXcB7VXa-200-200.svg'\n          />\n        )\n      } else {\n        return (\n          <img\n            className='eye'\n            onClick={this.switchEye()}\n            src='//img.alicdn.com/tfs/TB1xiXlsVzqK1RjSZFvXXcB7VXa-200-200.svg'\n          />\n        )\n      }\n    }\n\n    render() {\n      const {\n        className,\n        checkStrength,\n        value,\n        onChange,\n        htmlType,\n        innerAfter,\n        ...others\n      } = this.props\n      return (\n        <div className={className}>\n          <Input\n            htmlType={this.state.eye ? 'text' : 'password'}\n            className={`input-${this.state.eye ? 'text' : 'password'}`}\n            value={this.state.value}\n            onChange={this.onChangeHandler}\n            innerAfter={this.renderEye()}\n            {...others}\n          />\n          {checkStrength && this.renderStrength()}\n        </div>\n      )\n    }\n  }\n)`\n  .next-input {\n    width: 100%;\n    position: relative;\n    &.input-password input {\n      font-size: 16px;\n      letter-spacing: 2px;\n    }\n    input {\n      padding-right: 25px;\n    }\n    .eye {\n      position: absolute;\n      height: 20px;\n      right: 5px;\n      top: 50%;\n      transform: translate(0, -50%);\n      opacity: 0.3;\n      cursor: pointer;\n      transition: all 0.15s ease-in-out;\n      &:hover {\n        opacity: 0.6;\n      }\n    }\n  }\n  .password-strength-wrapper {\n    background: #e0e0e0;\n    margin-bottom: 3px;\n    position: relative;\n    .div {\n      position: absolute;\n      z-index: 1;\n      height: 8px;\n      top: 0;\n      background: #fff;\n      width: 1px;\n      transform: translate(-50%, 0);\n    }\n    .div-1 {\n      left: 20%;\n    }\n    .div-2 {\n      left: 40%;\n    }\n    .div-3 {\n      left: 60%;\n    }\n    .div-4 {\n      left: 80%;\n    }\n    .password-strength-bar {\n      position: relative;\n      background-image: -webkit-linear-gradient(left, #ff5500, #ff9300);\n      transition: all 0.35s ease-in-out;\n      height: 8px;\n      width: 100%;\n      margin-top: 5px;\n    }\n  }\n`\n\nregisterFormField('password', connect()(Password))\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Row, Col } from '@alifd/next/lib/grid'\nimport { FormConsumer } from '../form'\nimport Sticky from 'react-stikky'\nimport cls from 'classnames'\nimport styled from 'styled-components'\n\nconst getAlign = align => {\n  if (align === 'start' || align === 'end') return align\n  if (align === 'left' || align === 'top') return 'flex-start'\n  if (align === 'right' || align === 'bottom') return 'flex-end'\n  return align\n}\n\nconst isElementInViewport = (rect, { offset = 0, threshold = 0 } = {}) => {\n  const { top, right, bottom, left, width, height } = rect\n  const intersection = {\n    t: bottom,\n    r: window.innerWidth - left,\n    b: window.innerHeight - top,\n    l: right\n  }\n\n  const elementThreshold = {\n    x: threshold * width,\n    y: threshold * height\n  }\n\n  return (\n    intersection.t >= (offset.top || offset + elementThreshold.y) &&\n    intersection.r >= (offset.right || offset + elementThreshold.x) &&\n    intersection.b >= (offset.bottom || offset + elementThreshold.y) &&\n    intersection.l >= (offset.left || offset + elementThreshold.x)\n  )\n}\n\nexport const FormButtonGroup = styled(\n  class FormButtonGroup extends Component {\n    static defaultProps = {\n      span: 24\n    }\n\n    renderChildren() {\n      const { children, itemStyle, offset, span } = this.props\n      return (\n        <div className='button-group'>\n          <Row>\n            <Col span={span}>\n              <Col offset={offset} className='inline'>\n                <div className='inline-view' style={itemStyle}>\n                  {children}\n                </div>\n              </Col>\n            </Col>\n          </Row>\n        </div>\n      )\n    }\n\n    getStickyBoundaryHandler(ref) {\n      return () => {\n        this.formNode = this.formNode || ReactDOM.findDOMNode(ref.current)\n        if (this.formNode) {\n          return isElementInViewport(this.formNode.getBoundingClientRect())\n        }\n        return true\n      }\n    }\n\n    render() {\n      const { sticky, style, className } = this.props\n\n      const content = (\n        <FormConsumer>\n          {({ inline } = {}) => (\n            <div\n              className={cls(className, {\n                'is-inline': !!inline\n              })}\n              style={style}\n            >\n              {this.renderChildren()}\n            </div>\n          )}\n        </FormConsumer>\n      )\n\n      if (sticky) {\n        return (\n          <div>\n            <FormConsumer>\n              {({ inline, FormRef } = {}) => {\n                if (!FormRef) return\n                return (\n                  <Sticky\n                    edge='bottom'\n                    triggerDistance={this.props.triggerDistance}\n                    offsetDistance={this.props.offsetDistance}\n                    zIndex={this.props.zIndex}\n                    getStickyBoundary={this.getStickyBoundaryHandler(FormRef)}\n                    style={{\n                      borderTop: '1px solid #eee',\n                      background: (style && style.background) || '#fff',\n                      padding: (style && style.padding) || '20px 0'\n                    }}\n                  >\n                    <div className={className} style={style}>\n                      {content}\n                    </div>\n                  </Sticky>\n                )\n              }}\n            </FormConsumer>\n          </div>\n        )\n      }\n\n      return content\n    }\n  }\n)`\n  ${props =>\n    props.align ? `display:flex;justify-content: ${getAlign(props.align)}` : ''}\n  &.is-inline {\n    display: inline-block;\n    flex-grow: 3;\n  }\n  .button-group {\n    .inline {\n      display: inline-block;\n      .inline-view {\n        & > * {\n          margin-right: 10px;\n          margin-left: 0px;\n          display: inline-block;\n        }\n        & > *:last-child {\n          margin-right: 0 !important;\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { FormConsumer } from '@uform/react'\nimport { Button } from '@alifd/next'\n\nexport const Submit = ({ showLoading, ...props }) => {\n  return (\n    <FormConsumer>\n      {({ status, schema }) => {\n        return (\n          <Button\n            type='primary'\n            htmlType='submit'\n            {...props}\n            loading={props.showLoading ? status === 'submitting' : undefined}\n          >\n            {props.children || '提交'}\n          </Button>\n        )\n      }}\n    </FormConsumer>\n  )\n}\n\nSubmit.defaultProps = {\n  showLoading: true\n}\n\nexport const Reset = props => {\n  return (\n    <FormConsumer>\n      {({ status, reset }) => {\n        return (\n          <Button {...props} onClick={reset}>\n            {props.children || '重置'}\n          </Button>\n        )\n      }}\n    </FormConsumer>\n  )\n}\n","import React, { Component } from 'react'\nimport { createVirtualBox } from '@uform/react'\nimport { toArr } from '@uform/utils'\nimport { Row, Col } from '@alifd/next/lib/grid'\nimport Card from '@alifd/next/lib/card'\nimport { FormConsumer, FormItem, FormProvider } from '../form'\nimport styled from 'styled-components'\nimport cls from 'classnames'\n\nconst normalizeCol = (col, _default = 0) => {\n  if (!col) return _default\n  return typeof col === 'object' ? col : { span: col }\n}\n\nexport const FormLayout = createVirtualBox(\n  'layout',\n  ({ children, ...props }) => {\n    return (\n      <FormConsumer>\n        {value => {\n          let newValue = { ...value, ...props }\n          let child =\n            newValue.inline || newValue.className || newValue.style ? (\n              <div\n                className={cls(newValue.className, {\n                  'next-form next-inline': !!newValue.inline\n                })}\n                style={newValue.style}\n              >\n                {children}\n              </div>\n            ) : (\n              children\n            )\n          return <FormProvider value={newValue}>{child}</FormProvider>\n        }}\n      </FormConsumer>\n    )\n  }\n)\n\nexport const FormItemGrid = createVirtualBox(\n  'grid',\n  class extends Component {\n    renderFormItem(children) {\n      const { title, description, help, name, extra, ...others } = this.props\n      return React.createElement(\n        FormConsumer,\n        {},\n        ({\n          labelAlign,\n          labelTextAlign,\n          labelCol,\n          wrapperCol,\n          size,\n          autoAddColon\n        }) => {\n          return React.createElement(\n            FormItem,\n            {\n              labelAlign,\n              labelTextAlign,\n              labelCol,\n              wrapperCol,\n              autoAddColon,\n              size,\n              ...others,\n              label: title,\n              noMinHeight: true,\n              id: name,\n              extra: description,\n              help\n            },\n            children\n          )\n        }\n      )\n    }\n\n    renderGrid() {\n      let {\n        children,\n        cols,\n        title,\n        description,\n        help,\n        extra,\n        ...props\n      } = this.props\n      children = toArr(children)\n      cols = toArr(cols).map(col => normalizeCol(col))\n      const childNum = children.length\n\n      if (cols.length < childNum) {\n        let offset = childNum - cols.length\n        let lastSpan =\n          24 -\n          cols.reduce((buf, col) => {\n            return (\n              buf +\n              Number(col.span ? col.span : 0) +\n              Number(col.offset ? col.offset : 0)\n            )\n          }, 0)\n        for (let i = 0; i < offset; i++) {\n          cols.push(parseInt(offset / lastSpan))\n        }\n      }\n\n      return (\n        <Row {...props}>\n          {children.reduce((buf, child, key) => {\n            return child\n              ? buf.concat(\n                <Col key={key} {...cols[key]}>\n                  {child}\n                </Col>\n              )\n              : buf\n          }, [])}\n        </Row>\n      )\n    }\n\n    render() {\n      const { title } = this.props\n      if (title) {\n        return this.renderFormItem(this.renderGrid())\n      } else {\n        return this.renderGrid()\n      }\n    }\n  }\n)\n\nexport const FormCard = createVirtualBox(\n  'card',\n  styled(\n    class extends Component {\n      static defaultProps = {\n        contentHeight: 'auto'\n      }\n      render() {\n        const { children, className, ...props } = this.props\n        return (\n          <Card className={className} {...props}>\n            {children}\n          </Card>\n        )\n      }\n    }\n  )`\n    margin-bottom: 30px;\n    .next-card-body {\n      padding-top: 30px;\n      padding-bottom: 0 !important;\n    }\n  `\n)\n\nexport const FormBlock = createVirtualBox(\n  'block',\n  styled(\n    class extends Component {\n      static defaultProps = {\n        contentHeight: 'auto'\n      }\n      render() {\n        const { children, className, ...props } = this.props\n        return (\n          <Card className={className} {...props}>\n            {children}\n          </Card>\n        )\n      }\n    }\n  )`\n    margin-bottom: 0px;\n    .next-card-body {\n      padding-top: 20px;\n      padding-bottom: 0 !important;\n    }\n    &.next-card {\n      border: none;\n      padding: 0 15px;\n      padding-bottom: 15px;\n    }\n  `\n)\n","import './form'\nimport './fields/string'\nimport './fields/number'\nimport './fields/boolean'\nimport './fields/date'\nimport './fields/time'\nimport './fields/range'\nimport './fields/upload'\nimport './fields/checkbox'\nimport './fields/radio'\nimport './fields/rating'\nimport './fields/transfer'\nimport './fields/array'\nimport './fields/table'\nimport './fields/password'\nimport { mapStyledProps, mapTextComponent } from './utils'\nimport { SchemaForm } from '@uform/react'\nexport * from '@uform/react'\nexport * from './components/formButtonGroup'\nexport * from './components/button'\nexport * from './components/layout'\nexport { mapStyledProps, mapTextComponent }\nexport default SchemaForm\n"],"mappings":"AAAA;;;;;;;;;;;;;;AC0CA;;;;;;;;;;;;;;;;;;;;;ACyKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;;;;;;;;;;;;;;;AClPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkNA;;;;;;;;;;;;;;;ACtNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuTA;AClMA;;;;;;;;;;;;;;;;;;;;ACtHA;;;;;;AC4JA;;;;;;;;;;;AChKA","sourceRoot":""}