{"version":3,"file":"bundle.26.js","sources":["webpack:///./docs/API/createAsyncFormActions.md"],"sourcesContent":["\"use strict\";\n\nvar React = require('/Users/wangzhili/uform/node_modules/_react@16.8.6@react/index.js');\n\nvar ReactDOM = require('/Users/wangzhili/uform/node_modules/_react-dom@16.8.6@react-dom/index.js');\n\nvar ReactCodeSnippet = require('/Users/wangzhili/uform/node_modules/_react-code-snippet@0.6.12@react-code-snippet/lib/index.js');\n\nvar ReactPropsTable = require('/Users/wangzhili/uform/node_modules/_react-props-table@0.1.3@react-props-table/lib/index.js');\n\nvar __DEFINE__ = function __DEFINE__(fn) {\n  var module = {\n    exports: {}\n  };\n  fn(module, module.exports);\n  var component = module.exports.__esModule && module.exports['default'] || module.exports;\n  return typeof component === 'function' ? component : function () {\n    return React.createElement('div', {}, 'Code snippet should export a component!');\n  };\n};\n\nvar Demo_vkosi_4 = __DEFINE__(function (module, exports) {\n  var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\n  exports.__esModule = true;\n  exports[\"default\"] = _default;\n\n  var _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireDefault(require(\"react\"));\n\n  var _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\n  var _react2 = _interopRequireWildcard(require(\"@uform/react\"));\n\n  (0, _react2.registerFormField)('string', (0, _react2.connect)()(function (props) {\n    return _react[\"default\"].createElement(\"input\", (0, _extends2[\"default\"])({}, props, {\n      value: props.value || ''\n    }));\n  }));\n  (0, _react2.registerFormField)('text', (0, _react2.connect)()(function (props) {\n    return _react[\"default\"].createElement(\"div\", null, props.value || '');\n  }));\n  var actions = (0, _react2.createAsyncFormActions)();\n  actions.setFieldState('bb', function (state) {\n    state.value = '123123';\n  });\n\n  function _default() {\n    return _react[\"default\"].createElement(\"div\", null, _react[\"default\"].createElement(_react2[\"default\"], {\n      actions: actions,\n      effects: function effects($) {\n        $('onFieldChange', 'aa').subscribe(function (_ref) {\n          var value = _ref.value;\n          actions.setFieldState('bb', function (state) {\n            state.value = value;\n          });\n        });\n      },\n      onSubmit: function onSubmit() {\n        return alert('submited');\n      }\n    }, _react[\"default\"].createElement(_react2.Field, {\n      name: \"aa\",\n      type: \"string\"\n    }), _react[\"default\"].createElement(_react2.Field, {\n      name: \"bb\",\n      type: \"text\"\n    })), _react[\"default\"].createElement(\"button\", {\n      onClick: function onClick() {\n        actions.submit();\n      }\n    }, \"\\u63D0\\u4EA4\\u8868\\u5355\"));\n  }\n});\n\nvar __MARKDOWN__ = function __MARKDOWN__() {\n  return React.createElement(React.Fragment, {}, React.createElement(\"h1\", {\n    id: \"createasyncformactions\",\n    className: \"react-demo-h1\"\n  }, \"createAsyncFormActions\"), React.createElement(\"h2\", {\n    id: \"介绍\",\n    className: \"react-demo-h2\"\n  }, \"介绍\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"声明表单 Actions，用于跨组件通讯，使用该方法创建的所有 Actions 都是会返回一个\\nPromise 对象，可以在任何时机调用 actions，不会出现 actions 未实现的错误\"), React.createElement(\"h2\", {\n    id: \"类型描述\",\n    className: \"react-demo-h2\"\n  }, \"类型描述\"), React.createElement(ReactCodeSnippet, {\n    code: \"type createAsyncFormActions() : {\\n    setFormState(callback : (state : formState)=>void) : Promise, //设置表单状态，目前只支持设置formState.values\\n    getFormState(callback : (state : formState)=>any)), //获取表单状态\\n    setFieldState(name : String,callback : (state : fieldState)=>void) : Promise, //设置表单字段状态，目前支持设置fieldState的所有属性\\n    getFieldState(name : String[,callback : (state : fieldState)=>any)]) : Promise,//获取表单字段状态,callback为可选参数\\n    reset() : Promise,//重置表单\\n    submit() : Promise,//提交表单\\n    validate() : Promise,//校验表单\\n    getSchema(name : String) : Promise //获取表单Schema\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"formstate\",\n    className: \"react-demo-h2\"\n  }, \"formState\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"用于描述整个表单状态的模型对象\"), React.createElement(ReactCodeSnippet, {\n    code: \"type formState {\\n    values            : Object, //表单数据\\n    valid             : Boolean, //是否合法\\n    invalid           : Boolean, //是否不合法\\n    errors            : Array<String>, //错误提示集合\\n    pristine          : Boolean, //是否是原始态\\n    dirty             : Boolean //是否存在变化\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"fieldstate\",\n    className: \"react-demo-h2\"\n  }, \"fieldState\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"用于描述表单字段状态的模型对象\"), React.createElement(ReactCodeSnippet, {\n    code: \"type fieldState {\\n    value            : Any,//字段值\\n    valid            : Boolean,//字段是否合法\\n    invalid          : Boolean,//字段是否非法\\n    visible          : Boolean,//字段显示状态\\n    editable         : Boolean,//字段是否可编辑\\n    loading          : Boolean,//字段加载状态\\n    errors           : Array<String>,//字段错误消息集合\\n    pristine         : Boolean,//字段是否处于原始态\\n    initialValue     : Any,//字段初始值\\n    name             : String,//字段路径\\n    path,            : Array<String>//字段路径，数组形式\\n    props            : Object,//字段附加属性\\n    rules            : Array<Object | Function | String>//字段校验规则\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"依赖\",\n    className: \"react-demo-h2\"\n  }, \"依赖\"), React.createElement(ReactCodeSnippet, {\n    code: \"import { createAsyncFormActions } from '@uform/react'\\n\",\n    justCode: true,\n    lang: \"javascript\"\n  }), React.createElement(\"h2\", {\n    id: \"用例\",\n    className: \"react-demo-h2\"\n  }, \"用例\"), React.createElement(ReactCodeSnippet, {\n    code: \"import React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport SchemaForm, {\\n  Field,\\n  registerFormField,\\n  connect,\\n  createAsyncFormActions\\n} from '@uform/react'\\n\\nregisterFormField(\\n  'string',\\n  connect()(props => <input {...props} value={props.value || ''} />)\\n)\\n\\nregisterFormField('text', connect()(props => <div>{props.value || ''}</div>))\\n\\nconst actions = createAsyncFormActions()\\n\\nactions.setFieldState('bb', state => {\\n  state.value = '123123'\\n})\\n\\nReactDOM.render(\\n  <div>\\n    <SchemaForm\\n      actions={actions}\\n      effects={$ => {\\n        $('onFieldChange', 'aa').subscribe(({ value }) => {\\n          actions.setFieldState('bb', state => {\\n            state.value = value\\n          })\\n        })\\n      }}\\n      onSubmit={() => alert('submited')}\\n    >\\n      <Field name=\\\"aa\\\" type=\\\"string\\\" />\\n      <Field name=\\\"bb\\\" type=\\\"text\\\" />\\n    </SchemaForm>\\n    <button\\n      onClick={() => {\\n        actions.submit()\\n      }}\\n    >\\n      提交表单\\n    </button>\\n  </div>,\\n  document.getElementById('root')\\n)\\n\",\n    justCode: false,\n    lang: \"jsx\"\n  }, React.createElement(Demo_vkosi_4, {})));\n};\n\n__MARKDOWN__.meta = {\n  \"username\": \"zhili.wzl\",\n  \"email\": \"wangzhili56@126.com\"\n};\nmodule.exports = __MARKDOWN__;"],"mappings":"AAEA","sourceRoot":""}