{"version":3,"file":"bundle.34.js","sources":["webpack:///./docs/API/FormPath.md"],"sourcesContent":["\"use strict\";\n\nvar React = require('/Users/wangzhili/uform/node_modules/_react@16.8.6@react/index.js');\n\nvar ReactDOM = require('/Users/wangzhili/uform/node_modules/_react-dom@16.8.6@react-dom/index.js');\n\nvar ReactCodeSnippet = require('/Users/wangzhili/uform/node_modules/_react-code-snippet@0.6.12@react-code-snippet/lib/index.js');\n\nvar ReactPropsTable = require('/Users/wangzhili/uform/node_modules/_react-props-table@0.1.3@react-props-table/lib/index.js');\n\nvar __DEFINE__ = function __DEFINE__(fn) {\n  var module = {\n    exports: {}\n  };\n  fn(module, module.exports);\n  var component = module.exports.__esModule && module.exports['default'] || module.exports;\n  return typeof component === 'function' ? component : function () {\n    return React.createElement('div', {}, 'Code snippet should export a component!');\n  };\n};\n\nvar __MARKDOWN__ = function __MARKDOWN__() {\n  return React.createElement(React.Fragment, {}, React.createElement(\"h1\", {\n    id: \"formpath\",\n    className: \"react-demo-h1\"\n  }, \"FormPath\"), React.createElement(\"h2\", {\n    id: \"介绍\",\n    className: \"react-demo-h2\"\n  }, \"介绍\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, \"专注于解决表单字段的路径匹配问题\"), React.createElement(\"h2\", {\n    id: \"类型描述\",\n    className: \"react-demo-h2\"\n  }, \"类型描述\"), React.createElement(ReactCodeSnippet, {\n    code: \"type FormPath {\\n   match : (\\n      pattern : String, //匹配模式字符串\\n      matchRealPath : Boolean, //是否匹配真实路径，该属性是用于处理path为FormField时，是否匹配完整路径\\n      filter : Function //过滤器，相当于是基于pattern所匹配的结果再进行一次过滤操作\\n   )=>(\\n          path : String | Array<String> | FormField\\n      )=>Boolean,\\n   transform:(\\n      path : String | Array<String>,//要改变的路径\\n      regexp : RegExp, //提取正则，该正则会在路径遍历过程中将某个路径节点按照该正则提取出来，然后以参数形式放到callback中\\n      operator : Function //路径处理器，根据正则提取出来的路径节点，做一些转换处理，并返回最终路径\\n   ) : Any\\n}\\n\",\n    justCode: true,\n    lang: \"typescript\"\n  }), React.createElement(\"h2\", {\n    id: \"依赖\",\n    className: \"react-demo-h2\"\n  }, \"依赖\"), React.createElement(ReactCodeSnippet, {\n    code: \"import {FormPath} from '@alife/uform'\\n\",\n    justCode: true,\n    lang: \"javascript\"\n  }), React.createElement(\"h2\", {\n    id: \"pattern路径匹配语法\",\n    className: \"react-demo-h2\"\n  }, \"Pattern路径匹配语法\"), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"全通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"*\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"扩展匹配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"aaa~\\\" or \\\"~\\\" or \\\"aaa~.bbb.cc\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"部分通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"a.b.*.c.*\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"分组通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"a.b.*(aa.bb.dd,cc,mm)\\\"\\nor \\n\\\"a.b.*(!aa.bb.dd,cc,mm)\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"嵌套分组通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"a.b.*(aa.bb.*(aa.b,c),cc,mm)\\\"\\nor \\n\\\"a.b.*(!aa.bb.*(aa.b,c),cc,mm)\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"范围通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"a.b.*[10:100]\\\"\\nor \\n\\\"a.b.*[10:]\\\"\\nor \\n\\\"a.b.*[:100]\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"p\", {\n    className: \"react-demo-p\"\n  }, React.createElement(\"strong\", {\n    className: \"react-demo-strong\"\n  }, \"关键字通配\")), React.createElement(ReactCodeSnippet, {\n    code: \"\\\"a.b.[[cc.uu()sss*\\\\\\\\[1222\\\\\\\\]]]\\\"\\n\",\n    justCode: true,\n    lang: null\n  }), React.createElement(\"h2\", {\n    id: \"用例\",\n    className: \"react-demo-h2\"\n  }, \"用例\"), React.createElement(ReactCodeSnippet, {\n    code: \"import {FormPath} from '@alife/uform'\\n\\nFormPath.match('aa')('aa') // true\\nFormPath.match('*')('aa')  //true\\nFormPath.match('aa.*')('aa') //false\\nFormPath.match('aa.*')('aa.bb') // true\\nFormPath.match('aa.*(bb,cc)')('aa.dd') //false\\nFormPath.match('aa.*(!bb,cc)')('aa.dd') //true\\n\\nFormPath.transform('aa.2.bb.3.dd',/\\\\d+/,($1,$2)=>{\\n   return `aa.${$1+1}.bb.${$2-1}.dd`\\n}) // aa.3.bb.2.dd\\n\",\n    justCode: true,\n    lang: \"javascript\"\n  }));\n};\n\n__MARKDOWN__.meta = {\n  \"username\": \"zhili.wzl\",\n  \"email\": \"wangzhili56@126.com\"\n};\nmodule.exports = __MARKDOWN__;"],"mappings":"AAEA","sourceRoot":""}